<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingel.server.mapper.CustomerMapper">

    <resultMap id="CustomersMap" type="com.dingel.server.pojo.dto.Excel.ExcelCustomer">
        <id property="id" column="id"/>
        <result property="customersPhone" column="customers_phone"/>
        <result property="customersIdCard" column="customers_idCard"/>
        <result property="customersAddress" column="customers_address"/>
        <result property="customersEmail" column="customers_email"/>
        <result property="customersName" column="customers_name"/>
        <result property="sex" column="sex"/>
    </resultMap>


    <!--客户导出-->
    <select id="selectCustomerToExcel" resultMap="CustomersMap">
        select * from customer
    </select>



     <!-- 查询导入的客户是否已存在-->
    <select id="selectCustomer" parameterType="String" resultType="Integer">
        SELECT
            COUNT(*)
        FROM
            customer
        WHERE
            id = #{customerId}
    </select>

    <!--若用户已存在则删除该用户再插入-->
    <delete id="deleteCustomer" parameterType="String">
        DELETE
        FROM
            customer
        WHERE
            id = #{customerId}
    </delete>


    <!--导入用户信息-->
    <insert id="importCustomer" parameterType="com.dingel.server.pojo.dto.Excel.ExcelCustomer">
        INSERT INTO customer (customers_name, customers_phone, customers_idCard,customers_address,customers_email,sex)
        VALUES
            (
                #{customersName},
                #{customersPhone},
                #{customersIdCard},
                #{customersAddress},
                #{customersEmail},
                #{sex}
             )
    </insert>



    <!--新增客户-->
    <insert id="insertCustomer" parameterType="hashmap" >
        INSERT INTO customer (customers_name, customers_phone, customers_idCard,customers_address,customers_email,sex)
        VALUES
            (
                #{customersName},
                #{customersPhone},
                #{customersIdCard},
                #{customersAddress},
                #{customersEmail},
                #{sex}
            )
    </insert>



    <!--更新客户-->
    <update id="updateCustomer" parameterType="hashmap">
        UPDATE customer
        <set>
            <if test="null!=customersName and ''!=customersName">
                customer.`customers_name` = #{customersName},
            </if>
            <if test="null!=customersPhone and ''!=customersPhone">
                customer.customers_phone = #{customersPhone},
            </if>
            <if test="null!=customersIdCard and ''!=customersIdCard">
                customer.customers_idCard = #{customersIdCard},
            </if>
            <if test="null!=customersAddress and ''!=customersAddress">
                customer.customers_address = #{customersAddress},
            </if>
            <if test="null!=customersEmail and ''!=customersEmail">
                customer.customers_email = #{customersEmail},
            </if>
            <if test="null!=sex and ''!=sex">
                customer.sex = #{sex},
            </if>

        </set>
        WHERE
        customer.id = #{id}
    </update>



    <!--批量删除-->
    <delete id="deleteBathCIds" parameterType="java.lang.Integer">
        delete from customer where id in
            <foreach collection="list" item="id"  separator="," open="(" close=")">
                #{id}
            </foreach>
    </delete>



</mapper>
